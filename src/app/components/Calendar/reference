import React from 'react';
import { isToday, startOfToday } from 'date-fns';
import { FaAngleLeft, FaAngleRight } from 'react-icons/fa';

export default function Calendar() {
  console.log(startOfToday());
  console.log(new Date(2024, 4, 16));
  console.log(isToday(new Date(2024, 4, 16)));
  const hi = new Date(2024, 4, 16);
  const date = hi.getDate();

  return (
    <div className='my-20 w-10/12 bg-platinum'>
      <div className='flex justify-between'>
        <span className='text-3xl'>May Events</span>
        <div className='flex items-center justify-evenly gap-6 sm:gap-12'>
          <FaAngleLeft className='h-6 w-6 cursor-pointer' />
          <FaAngleRight className='h-6 w-6 cursor-pointer' />
        </div>
      </div>
      <div className='flex flex-col space-y-2 text-rose'>
        <div className=' flex justify-between bg-jet p-2'>
          <span className='text-2xl'>
            <div>{date}</div>
            <div>{date}</div>
          </span>
          <div>
            <h4>CINE 313 Animation Workshop: Student Screening</h4>
            <span>Apollo Theater @ 7PM</span>
          </div>
        </div>
      </div>
    </div>
  );
}

// return (
//   <>
//     {MAY_EVENTS.map((event) => {
//       console.log('Event date: ', event.date);
//       if (format(day, 'eee d') === event.date)
//         return <span key={idx}>{event.title}</span>;
//     })}
// <div key={idx} className='flex'>
//   <p
//     key={idx}
//     className={`flex h-8 w-8 cursor-pointer justify-center rounded-full font-semibold  hover:text-white ${
//       isSameMonth(day, today)
//         ? 'text-gray-900'
//         : 'text-gray-400'
//     } ${!isToday(day) && 'hover:bg-blue-500'} ${
//       isToday(day) && 'bg-red-500 text-white'
//     }`}
//   >
//     {format(day, 'eee d')}
//   </p>
// </div>
//   </>
// );

{
  /* <span>Week {getWeekOfMonth(firstDayOfCurrWeek)} </span>
              <span
                className={clsx({
                  hidden:
                    getMonth(firstDayOfCurrWeek) ===
                    getMonth(endOfWeek(firstDayOfCurrWeek)),
                })}
              >
                - Week {getWeekOfMonth(endOfWeek(firstDayOfCurrWeek))}
              </span> */
}

// <div key={idx} className='flex w-full'>
//   <div className='flex w-40'>
//     <p
//       className={`w-15 flex h-8 cursor-pointer justify-center rounded-full font-semibold  hover:text-white ${
//         isSameMonth(day, today)
//           ? 'text-gray-900'
//           : 'text-gray-400'
//       } ${!isToday(day) && 'hover:bg-blue-500'} ${
//         isToday(day) && 'bg-red-500 text-white'
//       }`}
//     >
//       {format(day, 'eee d')}
//     </p>
//   </div>

//   <div className='italic'>No events on this day</div>
// </div>
